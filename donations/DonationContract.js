async function connectWallet(){if(window.ethereum){const t=new ethers.providers.Web3Provider(window.ethereum);return await t.send("eth_requestAccounts",[]),t}console.log("Please install MetaMask!")}async function getDonationContract(){const t=(await connectWallet()).getSigner();return new ethers.Contract(donationAddress,donationABI,t)}async function donate(t){const n=await getDonationContract(),e=await n.receive({value:ethers.utils.parseEther(t)});await e.wait(),console.log("Donation successful:",e)}const donationAddress="YOUR_DEPLOYED_CONTRACT_ADDRESS",donationABI=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getDonations",outputs:[{components:[{internalType:"address",name:"donor",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct Donation.DonationRecord[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalDonations",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalDonations",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{stateMutability:"payable",type:"receive"}];document.getElementById("donateButton").addEventListener("click",async()=>{const t=document.getElementById("donationAmount").value;await donate(t)});